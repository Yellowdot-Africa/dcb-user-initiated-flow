name: Deploy dcb_user_initiated_flow

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Remove node_modules and package-lock
        run: |
          rm -rf node_modules
          rm -f package-lock.json

      - name: Install dependencies
        run: npm install --legacy-peer-deps --no-audit --no-fund

      - name: Install missing type definitions
        run: npm install --save-dev @types/node --no-audit --no-fund

      - name: Clear TypeScript cache
        run: rm -rf node_modules/.tmp

      - name: Verify TypeScript installation
        run: ./node_modules/.bin/tsc --version

      - name: Build project
        run: npm run build

      - name: Deploy to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "dist/*"
          target: "/var/www/dcb_user_initiated_flow"
          strip_components: 1

      - name: Restart app on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /var/www/dcb_user_initiated_flow
            # Check if pm2 process exists and restart, otherwise start new
            if pm2 list | grep -q "dcb_user_initiated_flow"; then
              pm2 restart dcb_user_initiated_flow
            else
              # For static files, you might want to use a simple HTTP server
              pm2 start "npx serve -s . -l 3000" --name "dcb_user_initiated_flow"
            fi
